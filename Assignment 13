import java.util.Scanner;
import java.util.Stack;

public class Assignmetn13 {
	public static int num;
	public static Stack <Integer>[] tower = new Stack[4];
	
	public static void main(String[] args) {
		int n;
		tower[1] = new Stack <Integer>();
		tower[2] = new Stack <Integer>();
		tower[3] = new Stack <Integer>();
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Enter number of disks");
		n = scan.nextInt();

		move(n,"a", "b", "c");
		num = n;
		pushDisks(n);
	}
	
	public static void move(int n, String a, String b, String c)
	{
		if (n > 0)
		{
			move(n - 1, a, c, b);
			System.out.println("Move disk " + n + " from tower " + a + " to " + b);
			move(n - 1, c, b, a);
		}
	}
	
	public static void pushDisks (int n)
	{
		for (int i = n; i > 0; i--)
		{
			tower[1].push(i);
		}
		
		displayMoves();
		moveDisks(n, 1, 2, 3);
	}
	
	public static void moveDisks(int n, int a, int b, int c)
	{
		if (n > 0)
		{
			moveDisks(n - 1, a, c, b);
			int i = tower[a].pop();
			tower[c].push(i);
			displayMoves();
			moveDisks(n - 1, b, a, c);
		}
	}
	
	public static void displayMoves()
	{
		System.out.println("Tower A | Tower B | Tower C");
		
		for (int i = num - 1; i >= 0; i--)
		{
			String a = " ";
			String b = " ";
			String c = " ";
			
			try
			{
				a = String.valueOf(tower[1].get(i));
			}
			catch(Exception e)
			{
				
			}
			
			try
			{
				c = String.valueOf(tower[2]. get(i));
			}
			catch (Exception e)
			{
				
			}
			
			try 
			{
				b = String.valueOf(tower[3].get(i));
			}
			catch (Exception e)
			{
				
			}
	
			System.out.println("       " + a + "|       " + b + " |      " + c);
		}
	}

}
